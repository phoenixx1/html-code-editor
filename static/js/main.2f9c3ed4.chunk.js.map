{"version":3,"sources":["Editor/EditorElements.js","Editor/index.js","App.js","reportWebVitals.js","index.js"],"names":["EditorContainer","styled","div","Controls","CodingSection","Editor","useState","code","setCode","rand","setRand","ratio","setRatio","fontSize","setFontSize","dark","darkMode","setDarkMode","theme","setTheme","compile","a","val","value","replace","console","log","axios","post","then","res","statusText","catch","err","get","className","FormControl","InputLabel","Select","onChange","event","target","MenuItem","FormControlLabel","control","Switch","checked","name","color","inputProps","label","Button","onClick","element","document","createElement","file","Blob","type","href","URL","createObjectURL","download","body","appendChild","click","defaultValue","style","width","height","mode","newCode","placeholder","editorProps","$blockScrolling","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","background","src","App","AppContainer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f9c3ed4.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const EditorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  overflow-x: hidden;\n  h2 {\n    margin: 10px;\n  }\n  .slider {\n    padding: 10px;\n    @media screen and (max-width: 500px) {\n      visibility: hidden;\n    }\n  }\n\n  &.dark {\n    background: grey;\n    color: white;\n  }\n`;\n\nexport const Controls = styled.div`\n  display: flex;\n  height: 10%;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n\n  Button {\n    color: white;\n    background-color: #1e3a82;\n    padding: 5px 10px;\n    font-size: 0.8rem;\n\n    :hover {\n      background-color: black;\n      transform: scale(1.02);\n    }\n  }\n\n  .fontSizeSelect {\n    width: 80px;\n  }\n  .themeSelect {\n    width: 80px;\n  }\n  .control-right {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 45%;\n\n    .control-r-right {\n      display: flex;\n      align-items: center;\n      justify-content: space-around;\n      width: 60%;\n      @media screen and (max-width: 750px) {\n        /* flex-direction: column; */\n        width: 80%;\n      }\n      @media screen and (max-width: 550px) {\n        .themeSelect,\n        .fontSizeSelect {\n          visibility: hidden;\n        }\n      }\n    }\n  }\n`;\n\nexport const CodingSection = styled.div`\n  display: flex;\n  height: 100%;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n    .editor,\n    .frame {\n      width: 100% !important;\n      height: 40vh !important;\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-html\";\nimport \"ace-builds/src-noconflict/theme-kuroir\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/theme-tomorrow\";\nimport \"ace-builds/src-noconflict/theme-twilight\";\nimport \"ace-builds/src-noconflict/theme-xcode\";\nimport \"ace-builds/src-noconflict/theme-textmate\";\nimport \"ace-builds/src-noconflict/theme-solarized_dark\";\nimport \"ace-builds/src-noconflict/theme-solarized_light\";\nimport \"ace-builds/src-noconflict/theme-terminal\";\nimport \"ace-builds/src-noconflict/ext-language_tools\";\nimport axios from \"axios\";\nimport Slider from \"rc-slider\";\nimport \"rc-slider/assets/index.css\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport DirectionsRunIcon from \"@material-ui/icons/DirectionsRun\";\nimport Switch from \"@material-ui/core/Switch\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Button } from \"@material-ui/core\";\n\nimport { CodingSection, Controls, EditorContainer } from \"./EditorElements\";\n\nfunction Editor() {\n  const [code, setCode] = useState(\"\");\n  const [rand, setRand] = useState(0);\n  const [ratio, setRatio] = useState(45);\n  const [fontSize, setFontSize] = useState(14);\n  const [darkMode, setDarkMode] = useState({\n    dark: true,\n  });\n  const [theme, setTheme] = useState(\n    `${!darkMode.dark ? \"kuroir\" : \"solarized_dark\"}`\n  );\n\n  const compile = async () => {\n    let val = { value: code.replace(/\\n/g, \"\") };\n    console.log(val);\n\n    await axios\n      .post(\"https://frontend-editor.herokuapp.com/code\", val, {})\n      .then((res) => console.log(res.statusText))\n      .catch((err) => console.log(\"Error\", err));\n\n    setRand(rand + 1);\n    await axios.get(\"https://frontend-editor.herokuapp.com/code\", {});\n  };\n\n  const onChange = (newCode) => {\n    setCode(newCode);\n  };\n\n  const downloadCode = () => {\n    const element = document.createElement(\"a\");\n    const file = new Blob([code], {\n      type: \"text/plain\",\n    });\n    element.href = URL.createObjectURL(file);\n\n    element.download = \"download.txt\";\n    document.body.appendChild(element);\n    element.click();\n  };\n\n  const updateSlider = (val) => {\n    setRatio(val);\n    console.log(val);\n  };\n\n  const handleDarkMode = (event) => {\n    setDarkMode({ ...darkMode, [event.target.name]: event.target.checked });\n    if (darkMode.dark) {\n      setTheme(\"kuroir\");\n    } else {\n      setTheme(\"solarized_dark\");\n    }\n  };\n\n  return (\n    <EditorContainer className={`${darkMode.dark ? \"dark\" : \"\"}`}>\n      <h2>HTML Code Editor</h2>\n      <Controls className={`${darkMode.dark ? \"dark\" : \"\"}`}>\n        <div className=\"control-right\">\n          <div className=\"control-r-right\">\n            <FormControl className=\"fontSizeSelect\">\n              <InputLabel>Font-size</InputLabel>\n              <Select\n                value={fontSize}\n                onChange={(event) => setFontSize(event.target.value)}\n              >\n                <MenuItem value={12}>12</MenuItem>\n                <MenuItem value={14}>14</MenuItem>\n                <MenuItem value={16}>16</MenuItem>\n                <MenuItem value={18}>18</MenuItem>\n                <MenuItem value={20}>20</MenuItem>\n                <MenuItem value={22}>22</MenuItem>\n                <MenuItem value={24}>24</MenuItem>\n                <MenuItem value={28}>28</MenuItem>\n                <MenuItem value={32}>32</MenuItem>\n                <MenuItem value={36}>36</MenuItem>\n                <MenuItem value={42}>42</MenuItem>\n                <MenuItem value={50}>50</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControl className=\"themeSelect\">\n              <InputLabel>Theme</InputLabel>\n              <Select\n                value={theme}\n                onChange={(event) => setTheme(event.target.value)}\n              >\n                <MenuItem value={\"kuroir\"}>kuroir</MenuItem>\n                <MenuItem value={\"monokai\"}>monokai</MenuItem>\n                <MenuItem value={\"github\"}>github</MenuItem>\n                <MenuItem value={\"tomorrow\"}>tomorrow</MenuItem>\n                <MenuItem value={\"twilight\"}>twilight</MenuItem>\n                <MenuItem value={\"xcode\"}>xcode</MenuItem>\n                <MenuItem value={\"textmate\"}>textmate</MenuItem>\n                <MenuItem value={\"solarized_dark\"}>solarized_dark</MenuItem>\n                <MenuItem value={\"solarized_light\"}>solarized_light</MenuItem>\n                <MenuItem value={\"terminal\"}>terminal</MenuItem>\n              </Select>\n            </FormControl>\n            <FormControlLabel\n              control={\n                <Switch\n                  checked={darkMode.dark}\n                  onChange={handleDarkMode}\n                  color=\"primary\"\n                  name=\"dark\"\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                />\n              }\n              label=\"Dark Mode\"\n            />\n          </div>\n          <Button onClick={compile}>\n            Run\n            <DirectionsRunIcon />\n          </Button>\n        </div>\n        <Button onClick={downloadCode}>\n          Download\n          <GetAppIcon />\n        </Button>\n      </Controls>\n\n      <Slider className=\"slider\" onChange={updateSlider} defaultValue={45} />\n\n      <CodingSection>\n        <AceEditor\n          className=\"editor\"\n          fontSize={fontSize}\n          style={{ width: `${ratio}%`, height: \"85vh\" }}\n          mode=\"html\"\n          theme={theme}\n          onChange={onChange}\n          width=\"auto\"\n          placeholder={\"Start coding\"}\n          value={code}\n          editorProps={{ $blockScrolling: true }}\n          setOptions={{\n            enableBasicAutocompletion: true,\n            enableLiveAutocompletion: true,\n            enableSnippets: true,\n          }}\n        />\n        <iframe\n          className=\"frame\"\n          key={rand}\n          style={{\n            width: `${100 - ratio}%`,\n            height: \"85vh\",\n            background: \"white\",\n          }}\n          src=\"https://frontend-editor.herokuapp.com/\"\n        ></iframe>\n      </CodingSection>\n    </EditorContainer>\n  );\n}\n\nexport default Editor;\n","import styled from \"styled-components\";\nimport Editor from \"./Editor\";\n\nfunction App() {\n  return (\n    <AppContainer>\n      <Editor />\n    </AppContainer>\n  );\n}\n\nexport default App;\n\nconst AppContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  width: 100%;\n`;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}